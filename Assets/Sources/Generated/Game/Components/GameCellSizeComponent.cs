//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity cellSizeEntity { get { return GetGroup(GameMatcher.CellSize).GetSingleEntity(); } }
    public CellSizeComponent cellSize { get { return cellSizeEntity.cellSize; } }
    public bool hasCellSize { get { return cellSizeEntity != null; } }

    public GameEntity SetCellSize(float newX, float newY) {
        if (hasCellSize) {
            throw new Entitas.EntitasException("Could not set CellSize!\n" + this + " already has an entity with CellSizeComponent!",
                "You should check if the context already has a cellSizeEntity before setting it or use context.ReplaceCellSize().");
        }
        var entity = CreateEntity();
        entity.AddCellSize(newX, newY);
        return entity;
    }

    public void ReplaceCellSize(float newX, float newY) {
        var entity = cellSizeEntity;
        if (entity == null) {
            entity = SetCellSize(newX, newY);
        } else {
            entity.ReplaceCellSize(newX, newY);
        }
    }

    public void RemoveCellSize() {
        cellSizeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CellSizeComponent cellSize { get { return (CellSizeComponent)GetComponent(GameComponentsLookup.CellSize); } }
    public bool hasCellSize { get { return HasComponent(GameComponentsLookup.CellSize); } }

    public void AddCellSize(float newX, float newY) {
        var index = GameComponentsLookup.CellSize;
        var component = (CellSizeComponent)CreateComponent(index, typeof(CellSizeComponent));
        component.X = newX;
        component.Y = newY;
        AddComponent(index, component);
    }

    public void ReplaceCellSize(float newX, float newY) {
        var index = GameComponentsLookup.CellSize;
        var component = (CellSizeComponent)CreateComponent(index, typeof(CellSizeComponent));
        component.X = newX;
        component.Y = newY;
        ReplaceComponent(index, component);
    }

    public void RemoveCellSize() {
        RemoveComponent(GameComponentsLookup.CellSize);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCellSize;

    public static Entitas.IMatcher<GameEntity> CellSize {
        get {
            if (_matcherCellSize == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CellSize);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCellSize = matcher;
            }

            return _matcherCellSize;
        }
    }
}
