//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity currentPitchEntity { get { return GetGroup(GameMatcher.CurrentPitch).GetSingleEntity(); } }
    public CurrentPitchComponent currentPitch { get { return currentPitchEntity.currentPitch; } }
    public bool hasCurrentPitch { get { return currentPitchEntity != null; } }

    public GameEntity SetCurrentPitch(float newValue) {
        if (hasCurrentPitch) {
            throw new Entitas.EntitasException("Could not set CurrentPitch!\n" + this + " already has an entity with CurrentPitchComponent!",
                "You should check if the context already has a currentPitchEntity before setting it or use context.ReplaceCurrentPitch().");
        }
        var entity = CreateEntity();
        entity.AddCurrentPitch(newValue);
        return entity;
    }

    public void ReplaceCurrentPitch(float newValue) {
        var entity = currentPitchEntity;
        if (entity == null) {
            entity = SetCurrentPitch(newValue);
        } else {
            entity.ReplaceCurrentPitch(newValue);
        }
    }

    public void RemoveCurrentPitch() {
        currentPitchEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CurrentPitchComponent currentPitch { get { return (CurrentPitchComponent)GetComponent(GameComponentsLookup.CurrentPitch); } }
    public bool hasCurrentPitch { get { return HasComponent(GameComponentsLookup.CurrentPitch); } }

    public void AddCurrentPitch(float newValue) {
        var index = GameComponentsLookup.CurrentPitch;
        var component = (CurrentPitchComponent)CreateComponent(index, typeof(CurrentPitchComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCurrentPitch(float newValue) {
        var index = GameComponentsLookup.CurrentPitch;
        var component = (CurrentPitchComponent)CreateComponent(index, typeof(CurrentPitchComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCurrentPitch() {
        RemoveComponent(GameComponentsLookup.CurrentPitch);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentPitch;

    public static Entitas.IMatcher<GameEntity> CurrentPitch {
        get {
            if (_matcherCurrentPitch == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentPitch);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentPitch = matcher;
            }

            return _matcherCurrentPitch;
        }
    }
}
