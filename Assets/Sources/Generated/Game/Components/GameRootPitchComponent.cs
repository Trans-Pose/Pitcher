//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity rootPitchEntity { get { return GetGroup(GameMatcher.RootPitch).GetSingleEntity(); } }
    public RootPitchComponent rootPitch { get { return rootPitchEntity.rootPitch; } }
    public bool hasRootPitch { get { return rootPitchEntity != null; } }

    public GameEntity SetRootPitch(float newValue) {
        if (hasRootPitch) {
            throw new Entitas.EntitasException("Could not set RootPitch!\n" + this + " already has an entity with RootPitchComponent!",
                "You should check if the context already has a rootPitchEntity before setting it or use context.ReplaceRootPitch().");
        }
        var entity = CreateEntity();
        entity.AddRootPitch(newValue);
        return entity;
    }

    public void ReplaceRootPitch(float newValue) {
        var entity = rootPitchEntity;
        if (entity == null) {
            entity = SetRootPitch(newValue);
        } else {
            entity.ReplaceRootPitch(newValue);
        }
    }

    public void RemoveRootPitch() {
        rootPitchEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RootPitchComponent rootPitch { get { return (RootPitchComponent)GetComponent(GameComponentsLookup.RootPitch); } }
    public bool hasRootPitch { get { return HasComponent(GameComponentsLookup.RootPitch); } }

    public void AddRootPitch(float newValue) {
        var index = GameComponentsLookup.RootPitch;
        var component = (RootPitchComponent)CreateComponent(index, typeof(RootPitchComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRootPitch(float newValue) {
        var index = GameComponentsLookup.RootPitch;
        var component = (RootPitchComponent)CreateComponent(index, typeof(RootPitchComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRootPitch() {
        RemoveComponent(GameComponentsLookup.RootPitch);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRootPitch;

    public static Entitas.IMatcher<GameEntity> RootPitch {
        get {
            if (_matcherRootPitch == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RootPitch);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRootPitch = matcher;
            }

            return _matcherRootPitch;
        }
    }
}
