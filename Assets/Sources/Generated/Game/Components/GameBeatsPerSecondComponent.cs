//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity beatsPerSecondEntity { get { return GetGroup(GameMatcher.BeatsPerSecond).GetSingleEntity(); } }
    public BeatsPerSecondComponent beatsPerSecond { get { return beatsPerSecondEntity.beatsPerSecond; } }
    public bool hasBeatsPerSecond { get { return beatsPerSecondEntity != null; } }

    public GameEntity SetBeatsPerSecond(float newValue) {
        if (hasBeatsPerSecond) {
            throw new Entitas.EntitasException("Could not set BeatsPerSecond!\n" + this + " already has an entity with BeatsPerSecondComponent!",
                "You should check if the context already has a beatsPerSecondEntity before setting it or use context.ReplaceBeatsPerSecond().");
        }
        var entity = CreateEntity();
        entity.AddBeatsPerSecond(newValue);
        return entity;
    }

    public void ReplaceBeatsPerSecond(float newValue) {
        var entity = beatsPerSecondEntity;
        if (entity == null) {
            entity = SetBeatsPerSecond(newValue);
        } else {
            entity.ReplaceBeatsPerSecond(newValue);
        }
    }

    public void RemoveBeatsPerSecond() {
        beatsPerSecondEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BeatsPerSecondComponent beatsPerSecond { get { return (BeatsPerSecondComponent)GetComponent(GameComponentsLookup.BeatsPerSecond); } }
    public bool hasBeatsPerSecond { get { return HasComponent(GameComponentsLookup.BeatsPerSecond); } }

    public void AddBeatsPerSecond(float newValue) {
        var index = GameComponentsLookup.BeatsPerSecond;
        var component = (BeatsPerSecondComponent)CreateComponent(index, typeof(BeatsPerSecondComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceBeatsPerSecond(float newValue) {
        var index = GameComponentsLookup.BeatsPerSecond;
        var component = (BeatsPerSecondComponent)CreateComponent(index, typeof(BeatsPerSecondComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveBeatsPerSecond() {
        RemoveComponent(GameComponentsLookup.BeatsPerSecond);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBeatsPerSecond;

    public static Entitas.IMatcher<GameEntity> BeatsPerSecond {
        get {
            if (_matcherBeatsPerSecond == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BeatsPerSecond);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBeatsPerSecond = matcher;
            }

            return _matcherBeatsPerSecond;
        }
    }
}
